<html>

<head>
    <!--script type='text/javascript' src='prototype.js'></script--> 

    <!-- rpc libs , most recommanded file -->
    <script type='text/javascript' src='rpc.js'></script> 
    <!-- xml to json converting js file. -->
    <!--script type='text/javascript' src='xml2json.js'></script>  
    <script type='text/javascript' src='libs/ObjTree.js'></script-->
    <script type="text/javascript" src="./underscore-min.js"></script>
    <script type="text/javascript" src="./jquery-1.7.1.js"></script>
    <script type="text/javascript" src="./backbone.js"></script>
    <!-- qweb most recommanded file to html templating file. -->
    <script type="text/javascript" src="qweb.js"></script>

    <!-- ####  Really a simple jquery tabs libs files  #### -->
    <style>
        *{
            font-size: 12px;
         }
         div{
            border : 1px solid gray;
            margin:2px;
         }
         li{
            list-style-type: none;
            margin-left: -20px;
         }
         a{
            text-decoration : none;
         }
    </style>
 
    
<!--    <link type="text/css" href="libs/jquery-ui-1.7.3.custom/css/smoothness/jquery-ui-1.7.3.custom.css" rel="stylesheet" />	
    <script type="text/javascript" src="libs/jquery-ui-1.7.3.custom/js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="libs/jquery-ui-1.7.3.custom/js/jquery-ui-1.7.3.custom.min.js"></script>
-->
<script type='text/javascript'>
    QWeb.add_template("base.xml"); // LOAD MAIN APPLICATION TEMPLATE

    Apps = Backbone.View.extend({
        template : "main",
        
        id : 'body',
        
        default:{id:0,title:'testing one',content:'working...working...working...'},
        
		initialize: function(options){
		    this.rpc = false; 		    
		    this.records = options.records;
		    this.render();
		    this.set(this.default);		    
		},        
		render: function(){		
		    var html = QWeb.render("main",{});
		    this.el.append(html);
		    
		},
		events: {			
			"click a[action='add']" : "add",
			"click a[action='remove']" : "remove",
			"click .list-records > li >a" : "select",
		},
		select: function(event){
//		   console.log("ee", $(event.currentTarget).attr("data-id"))
		   var searchId = $(event.currentTarget).attr("data-id");
		   var record = false;		   
		   record = _.find(this.records,function(rec){ return (rec.id == searchId); });
		   this.set(record);
		   console.log("rec",searchId, record);
		},
		set:function(vals){		    
		    if(_.has(vals,'title'))
		        this.el.find("input[name='title']").val(vals['title']);
		    if(_.has(vals,'content'))    
    		    this.el.find("textarea[name='content']").val(vals['content']);	
		},
		db_load: function()
		{
		    
		},
		db_add: function(record){
		    this.records.push(record);
		},
		add: function(event){
		   // alert('add');
 		    this.set(this.default);		 
		    var record = new Object();
		    record['id'] = _.uniqueId();
		    record['title'] = this.el.find("input[name='title']").val();
		    record['content'] = this.el.find("textarea[name='content']").val();		    
		    this.db_add(record);
            this.list_add(record);		    
		   // console.log(this.records);
		    
		   // console.log("list-records",this,this.el, this.id, this.tagname);

		},
		list_add: function(record)
		{
		    var a =  $("<a/>");
		    a.attr("href","#");
		    a.attr("data-id", record.id);
		    a.html(record.title + record.id);
		    console.log(a,a[0]);
		    this.el.find(".list-records").append($("<li/>").append(a));
		},
		remove: function(){
		    alert('remove');
		},
		onchange: function(){
		}
	});
	
    $(function(){
        new Apps({el:$("body"),'records':[]});    
    });
    	
</script> 
</head>
<body id="body">
<a href="#" class="action_add">Button</a>
</body>
</html>

